https://leetcode.com/problems/minimum-cost-to-cut-a-stick/


//{ Driver Code Starts
import java.io.*;
import java.util.*;

class RodCutting {

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int[] arr = new int[n];
            for (int i = 0; i < n; i++) arr[i] = sc.nextInt();

            Solution ob = new Solution();
            System.out.println(ob.cutRod(arr, n));
        }
    }
}

// } Driver Code Ends


class Solution
{
    public int cutRod(int price[], int n) 
    {
        //code here
        int cur[] = new int[n+1];
        int prev[] = new int[n+1];
        
        for(int i=0;i<=n;i++)
        {
            prev[i] = i * price[0];
        }
        
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<=n;j++)
            {
                int notTake = 0 + prev[j];
                int take = Integer.MIN_VALUE;
                int rodLength = i+1;
                if(rodLength <= j)
                {
                    take = price[i] + cur[j-rodLength];
                }
                cur[j] = Math.max(take, notTake);
            }
            prev = cur;
        }
        
        return prev[n];
    }
}
